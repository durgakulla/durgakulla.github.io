<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-03-07T19:40:00-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Durga K.</title><subtitle></subtitle><author><name>Durga Kullakanda</name></author><entry><title type="html">Anki Guide for Medical Students</title><link href="http://localhost:4000/documentation/anki.html" rel="alternate" type="text/html" title="Anki Guide for Medical Students" /><published>2020-03-07T00:00:00-05:00</published><updated>2020-03-07T00:00:00-05:00</updated><id>http://localhost:4000/documentation/anki</id><content type="html" xml:base="http://localhost:4000/documentation/anki.html">&lt;h1 id=&quot;what-is-this-guide&quot;&gt;What Is This Guide?&lt;/h1&gt;

&lt;p&gt;This guide is intended for medical students who are wanting to learn about &lt;strong&gt;what Anki is&lt;/strong&gt; and &lt;strong&gt;how to use it in medical school&lt;/strong&gt;. The Anki software is intimidating when first starting to use it, so this guide will teach the basics of navigating the program, making flashcards to study, and how to get the most benefit from studying those flashcards. Later sections will also get into the finer details of the program, which will be useful to know as you get familiar with Anki and would like to tweak things to best fit your needs.&lt;/p&gt;

&lt;h1 id=&quot;1-what-is-anki&quot;&gt;1. What is Anki?&lt;/h1&gt;

&lt;p&gt;Anki is a highly customizable &lt;strong&gt;flashcard&lt;/strong&gt; program. If you’ve ever used web-based &lt;a href=&quot;http://quizlet.com&quot;&gt;&lt;strong&gt;Quizlet&lt;/strong&gt;&lt;/a&gt; flashcards, you’ll be familiar with the basic concept: you’re presented with one side of the flashcard, and then you can reveal the other side to test yourself on pretty much anything. Unfortunately, the high customizability of Anki makes it rather difficult to understand the ins and outs of how the program works. This &lt;strong&gt;comprehensive&lt;/strong&gt; &lt;strong&gt;guide&lt;/strong&gt; will teach you everything you need to know to &lt;strong&gt;use Anki in the most efficient way possible&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Quizlet flashcard example&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Anki flashcard example&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%201.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%201.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2-how-is-anki-different-from-quizlet-or-paper-flashcards&quot;&gt;2. How is Anki different from Quizlet or paper flashcards?&lt;/h1&gt;

&lt;p&gt;It’s hard to see on the surface how Anki is different from old-fashioned paper flashcards or applications like Quizlet. Truth be told, Anki’s user interface looks quite ugly when you first start using it. Anki’s power lies in its &lt;em&gt;implementation&lt;/em&gt; of two key concepts for memorization: &lt;strong&gt;active recall&lt;/strong&gt; and &lt;strong&gt;spaced repetition&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Active recall:&lt;/strong&gt; a method of learning in which one actively tests their memory by answering questions or recalling information, rather than passively reviewing by re-reading or highlighting text. Flashcards in general leverage the principle of active recall, and the flexibility when making Anki’s flashcards makes it a broadly useful tool in medical school. Anki cards can look like traditional front/back flashcards, fill-in-the-blank “cloze” style flashcards, or even images with labels hidden (e.g. for anatomy). Rather than looking at PowerPoint slides over and over again, or re-reading textbooks, Anki cards can help you use active learning in various ways.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spaced repetition:&lt;/strong&gt; a learning technique where new flashcards are seen more frequently than older ones. The time interval, which describes the amount of time before you see the same flashcard again, increases each time that flashcard is answered correctly. In Anki, an incorrectly answered flashcard will have its interval reduced so that you will see that card more frequently (since you presumably forgot the information on that specific flashcard).&lt;/p&gt;

&lt;p&gt;When you reveal the answer to a card, you are presented with buttons asking you to evaulate how well you knew that card. Based on your answer, the interval of that specific card is adjusted accordingly (the new interval is shown above each button). These principles allow you to &lt;strong&gt;study only as much as necessary&lt;/strong&gt; while &lt;strong&gt;improving your retention of material&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%202.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%202.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Each card has a time interval associated with it. Cards you know well will increase in interval each time, giving you time to focus on newer or harder information.&lt;/p&gt;

&lt;p&gt;Of course, these principles can generally be used when studying from traditional flashcards or Quizlet. Anki allows us to automate the process so we can focus on studying information, and only studying that information when we have to. In addition, Anki users can share flashcard “decks”, making collaboration easy. For medical school in particular, many Anki decks exist online which cover courses like anatomy, material from other products/resources medical students use, or even material for the USMLE Step 1.&lt;/p&gt;

&lt;h1 id=&quot;3-installing-anki-and-add-ons&quot;&gt;3. Installing Anki and Add-ons&lt;/h1&gt;

&lt;h2 id=&quot;installing-anki&quot;&gt;Installing Anki&lt;/h2&gt;

&lt;p&gt;Download and install the latest version of the Anki software using the instructions found on the &lt;a href=&quot;https://apps.ankiweb.net/&quot;&gt;&lt;strong&gt;Anki website&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This guide was written with &lt;strong&gt;Anki version 2.1&lt;/strong&gt; and version &lt;strong&gt;2.1 add-ons&lt;/strong&gt;, but the basic principles will never change. In the future, add-on support might vary by version. It is not recommended to use version 2.0 when following this guide.&lt;/p&gt;

&lt;h2 id=&quot;installing-add-ons&quot;&gt;Installing add-ons&lt;/h2&gt;

&lt;p&gt;Add-ons are additional features users have developed which increase the functionality of the base Anki program.&lt;/p&gt;

&lt;p&gt;To install add-ons: open Anki → open ‘Tools’ menu → Add-ons → Get Add-ons… → type in the code from the Add-on links below&lt;/p&gt;

&lt;p&gt;When starting, you’ll have to take my word that the following add-ons are &lt;strong&gt;essential&lt;/strong&gt; to have a good Anki experience:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://ankiweb.net/shared/info/1835859645&quot;&gt;Hierarchical Tags&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ankiweb.net/shared/info/1374772155&quot;&gt;Image Occlusion Enhanced&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ankiweb.net/shared/info/1102281552&quot;&gt;Special Fields&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ankiweb.net/shared/info/516643804&quot;&gt;Frozen Fields&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here are some additional (&lt;strong&gt;optional&lt;/strong&gt;) add-ons that change the apperance of Anki or provide extra statistics:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://ankiweb.net/shared/info/1496166067&quot;&gt;Night Mode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/glutanimate/review-heatmap&quot;&gt;Review Heatmap&lt;/a&gt; (scroll down to Manual installation and follow the instructions for Anki 2.1)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ankiweb.net/shared/info/1556734708&quot;&gt;More Decks Stats and Time Left&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ankiweb.net/shared/info/738807903&quot;&gt;More Overview Stats 2.1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ankiweb.net/shared/info/1828603731&quot;&gt;Stats Overview Pie Graph&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ankiweb.net/shared/info/923360400&quot;&gt;True Retention by Card Maturity&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;4-making-an-anki-deck&quot;&gt;4. Making an Anki Deck&lt;/h1&gt;

&lt;p&gt;Now that you’ve installing Anki and the add-ons listed above, Anki should look like this when you start the program (the following screenshots are taken with the “Night Mode” add-on, as well as all of the other optional add-ons mentioned above):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%203.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%203.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s say we want to make some cards for a lecture on childhood viral infections. Here is an example of a powerpoint slide we want to make flashcards for:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%204.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%204.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In Anki, click on the “Add” button. In this window, change the “Type” to “Cloze”. This allows us to make fill-in-the-blank style cards, but we can also make cards in a question/answer format. For this reason, I make cards exlusively in the cloze type so that I don’t have to switch back and forth and use multiple card types.&lt;/p&gt;

&lt;p&gt;We need to make a flashcard deck for these new cards to go into. Click on the Deck button (which should be set to Default when first starting out), click on the “Add” button, and give this deck a name. For this example, I’ve named my deck “Week 1::Childhood viral infections” (we’ll see what the “::” does soon). The Add window should now look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%205.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%205.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next we type out our question and answer in the “Text” field. Then, highlight the answer you’ve written out, and press “command/ctrl+shift+c”. The “cloze” syntax that is added means that the text within the brackets is the “blank” part of the fill-in-the-blank when we study these cards. In this case, I am blanking out the answer to a question:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%206.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%206.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Select the text that you want hidden when you first see the card. In this case, the answer to the question will be hidden.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%207.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%207.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pressing “command/ctrl+shift+c” adds the cloze “{{c1:: }}” syntax. The text in the middle will be hidden when studying the card.&lt;/p&gt;

&lt;p&gt;This part is optional, but I like to add a screenshot of wherever I got the information for the card in the card itself. To do this, just add the screenshot image file into the “Extra” field:&lt;/p&gt;

&lt;p&gt;On MacOS, press “command+control+Shift+4” to take a screenshot and copy it directly to the clipboard. Now you can quickly paste (“command+v”) the screenshot into the “Extra” field. I make the  screenshot shortcut easier to press by remapping it to “command+shift+1”. You can set this up by going to System Preferences → Keyboard → “Shortcuts” tab → Screenshots → change key combination for “Copy picture of selected area to clipboard” to “command+shift+1”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%208.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%208.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can add tags to cards you make, but I find that this gets tedious especially if you don’t keep up with cards after the exam they’re covered on, so I don’t tag cards I don’t intend to study beyond that exam. Instead, I make a separate deck for each lecture and organize them as “sub-decks”, which I will soon explain. Press “cmd/ctrl + enter” or the “Add” button to add the card to the deck you just created. Repeat this process to add as many cards as needed to this deck. You can also add more cards later but going into this Add window and making sure the “Deck” is set to the deck you want to add cards to.&lt;/p&gt;

&lt;p&gt;Let’s take a look at the main Anki window now:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%209.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%209.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Remember how I named my deck “Week 1::Childhood viral infections”? The two colons “::” indicate that you are making a deck that falls under a parent deck. These decks are called “sub-decks”. In the image above, we can see the main “Week 1” deck, with the subdeck which would contain all the cards from the lecture “Childhood viral infections”. You can organize your decks and subdecks however you find convenient, but it is always good to have one parent deck which contains all of the lecture subdecks you need to study for a particular exam, for example. This way, when you study the cards, you can get an assortment of questions from all of your lectures instead of studying just one lecture at a time.&lt;/p&gt;

&lt;p&gt;Here is an example of one of my decks. I organize decks by the following deck naming convention - “module::testnumber::weeknumber::lecturename”. This way, I can click on the Test 1 parent deck to study all of the cards for Test 1, or I can study from the Week 1 deck to study only that material:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%2010.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%2010.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Use whatever organization works for you! Instead of re-naming the decks, you can move decks around by clicking and dragging too.&lt;/p&gt;

&lt;h1 id=&quot;5-setting-up-deck-options&quot;&gt;5. Setting up Deck Options&lt;/h1&gt;

&lt;p&gt;You have now created a deck (or several) covering material you want to memorize. Before you study your cards, we have to make sure Anki’s algorithm for how often you see cards is optimized for your situation. For now, you’ll have to take a leap of faith and use the following settings when studying your cards. Read the section on understanding and adjusting settings for in-depth explanations of what all of this means.&lt;/p&gt;

&lt;p&gt;First, go into Anki preferences (“Anki” in the menu bar → Preferences). Make sure the “Experimental V2 scheduler” is checked, and accept any warnings the program displays. Your preferences window should look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%2011.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%2011.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on the cogwheel/settings icon next to any of your decks, and click “Options”. Keep the “Options group” set to “Default”. This way, these settings will apply to any deck you create in the future. Copy these settings exactly (leave the General and Description tabs the same), and then click “OK”:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%2012.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%2012.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%2013.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%2013.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%2014.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%2014.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now you’re ready to study. Click on a parent deck or subdeck (depending on whether you want to study multiple decks at a time, or a particular deck/subset of decks) and click “study Now”.&lt;/p&gt;

&lt;h1 id=&quot;6-studying-anki-decks&quot;&gt;6. Studying Anki Decks&lt;/h1&gt;

&lt;p&gt;Let’s say I’ve just created a deck of 28 new cards for a lecture I had named “Introduction to Virology”:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%2015.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%2015.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The “Introduction to Virology” deck shows 28 new cards since I have not studied any yet.&lt;/p&gt;

&lt;p&gt;Because I have a full set of cards for that lecture, I’d like to start studying it. As stated above, to study this “Introduction to Virology” deck, I would click on it and then click “Study Now”. The first card in that deck will pop up:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%2016.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%2016.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A card I’ve made in question/answer format. The answer was “clozed” out when I made the card, so it is initially hidden.&lt;/p&gt;

&lt;p&gt;When you see the front of a card like this, come up with the answer to the question if you can. Once you’ve done that (or if you can’t come up with anything), press the spacebar or click on “Show Answer” to reveal the answer:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%2017.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%2017.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The answer to the card from the previous picture. Note that both the typed out answer and the screenshot I add to the “Extra” section is shown.&lt;/p&gt;

&lt;p&gt;Now, you have to evaluate how you well you knew the answer to that card and whether you got the answer right or not. Based on this evaluation, you must press one of the buttons presented at the bottom of the window. Here is how to decide which button to click:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;“I got this question wrong” OR “I knew the answer but I couldn’t remember it” → click “&lt;strong&gt;Again&lt;/strong&gt;” or press 1&lt;/li&gt;
  &lt;li&gt;“I answered this question correctly” → click “&lt;strong&gt;Good&lt;/strong&gt;” or press spacebar&lt;/li&gt;
  &lt;li&gt;“I answered this question correctly, but it took me considerable effort to do so” → click “&lt;strong&gt;Hard&lt;/strong&gt;” — This option will not appear on cards in the learning phase. More on that later.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;NEVER&lt;/strong&gt; &lt;strong&gt;PRESS&lt;/strong&gt; “&lt;strong&gt;Easy&lt;/strong&gt;” - I’ll explain below&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Almost always, you should be pressing “Good” or “Again”. As the same card comes up again and again, pressing “Good” will increase the interval of the card (the amount of time it takes for that card to come back for you to review). Hitting “Again” will ensure that you see that card sooner and will see it more often than cards you know well. The reason you should never press easy is because the intervals will start to get very long very quickly, so you shouldn’t press it unless you know the question cold. But if that’s the case, that card probably isn’t very useful anyway.&lt;/p&gt;

&lt;p&gt;You can see what the new interval of the card would be if you pressed each button above the buttons. In the picture above, if I got the question correct, I would press “Good” and I would see the card 3 hours later.&lt;/p&gt;

&lt;p&gt;It’s important to be honest when evaluating your answer. If you click “Good” but don’t really understand a concept, you’ll see that card less often and you may not learn it well.&lt;/p&gt;

&lt;p&gt;Repeat this process for all of the cards in your deck, and you’ll see that the main screen shows that you have no new cards left, and nothing due either:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%2018.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%2018.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After around 3 hours (or in 20 minutes if you hit “Again” on some cards), you will see that cards in that deck will reappear, but this time they will count as cards that are “Due”:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%2019.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%2019.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All you have to do now is complete the due cards whenever they appear, and add and learn new cards as you go through classes or studying.&lt;/p&gt;

&lt;h1 id=&quot;7-explanation-of-ankis-algorithm&quot;&gt;7. Explanation of Anki’s Algorithm&lt;/h1&gt;

&lt;p&gt;Remember when we set up the Deck Options earlier? This is how the program calculates when you’ll see new cards next. The “Steps” option that we set to “20 180 1440 4320” in particular is most relevant:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/anki/Untitled%2012.png&quot; alt=&quot;Anki%20Guide%20for%20Medical%20Students/Untitled%2012.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Deck Options that were set up earlier. Notice the “Steps” correspond to the “Again” and “Good” intervals seen on the first card.&lt;/p&gt;

&lt;h2 id=&quot;learning-phase&quot;&gt;Learning Phase&lt;/h2&gt;

&lt;p&gt;The “20 180 1440 4320” that we set are called the “&lt;strong&gt;learning steps&lt;/strong&gt;”. When you first start studying a card, it is considered to be in the “&lt;strong&gt;learning phase&lt;/strong&gt;”. If you click “Good” the first time you see a card, you will see that card in 180 minutes (3 hours) — the card moves to the next learning step. For our settings, we would see the card in 3 hours, then 1 day, then 3 days. If you hit “&lt;strong&gt;Good&lt;/strong&gt;” after that 3 day interval, since the “4320” was the last interval step we provided in the options, the card “&lt;strong&gt;graduates&lt;/strong&gt;” and goes into the “&lt;strong&gt;review phase&lt;/strong&gt;”. The next interval is set to be the graduating interval, which we set to 7 days in the options.&lt;/p&gt;

&lt;p&gt;Clicking “&lt;strong&gt;Again&lt;/strong&gt;” while a card is in the learning phase moves the card back to the first step. In our case, you would see the card in 20 minutes, and then 3 hours, and so on.&lt;/p&gt;

&lt;p&gt;Clicking “&lt;strong&gt;Easy&lt;/strong&gt;” at any time during the learning phase immedaitely turns that card into a review card (skipping all remaining learning steps), and its interval is set to the “Easy interval” which we set to 6 days.&lt;/p&gt;

&lt;h2 id=&quot;review-phase&quot;&gt;Review Phase&lt;/h2&gt;

&lt;p&gt;Once a card goes through all of the learning steps and graduates, the Anki interval algorithm takes over. When you see that card after 7 days and hit “&lt;strong&gt;Good&lt;/strong&gt;”, Anki multiplies that 7 day interval by the “&lt;strong&gt;Ease&lt;/strong&gt;” which we set to start at 250% to calculate the new interval: 7 days * 2.5 = 17.5 days. So you’ll see that card after 17 days.&lt;/p&gt;

&lt;p&gt;Clicking “&lt;strong&gt;Hard&lt;/strong&gt;” means you still answered the card correctly, so that card’s interval increases. The current interval is mulitplied by 1.2 to calculate the next interval. For the first card, this would be 7 days * 1.2 = 8.4 days. Additionally, that card’s &lt;strong&gt;ease&lt;/strong&gt; is decreased by 15%. That means this card’s ease is now 235%, meaning you will see the card more frequently (e.g. next time you see the card and hit “Good”, the next interval will be shorter than it would have been if the ease remained at 250%).&lt;/p&gt;

&lt;p&gt;Clicking “&lt;strong&gt;Easy&lt;/strong&gt;” (which should NOT be happening a lot for the reasons stated above) means the current interval is multiplied by the card’s ease * easy bonus (which we set to 130%). For this card, that would be 7 days * 2.5 * 1.3 = 22.75 days. Because the card’s ease increased, it’s intervals will increase at a faster rate, so you will study this card far less than cards you hit Good or Hard on.&lt;/p&gt;

&lt;p&gt;Clicking “&lt;strong&gt;Again&lt;/strong&gt;” on a card in the review phase means that card has “&lt;strong&gt;lapsed&lt;/strong&gt;” and the card enters the “&lt;strong&gt;relearning phase&lt;/strong&gt;”. The card’s ease is decreased by 20%, meaning you will see this card more often in the future. The card’s next interval is calculated as current interval * New interval, which we set to be 40%. For this card, that would be 7 days * 0.4 = 2.8 days. Before this interval is used, Anki will show the card again to relearn, according to the steps in the Lapses section of the deck options. We set this to “20 180”, meaning you will see the card 20 minutes later, and then 3 hours later before seeing the card about 2.8 days later (when it is back in the review phase).&lt;/p&gt;

&lt;p&gt;The calculated intervals in the review phase have a bit of “fuzz” built into them. For example, instead of seeing the card exactly 17.5 days later, you might see it in 16 days, or in 19 days. This prevents cards that were started together from always coming up on the same day each time you review.&lt;/p&gt;</content><author><name>Paul Le</name></author><category term="documentation" /><category term="sample" /><summary type="html">What Is This Guide?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/book.jpg" /></entry><entry><title type="html">Welcome to Millennial!</title><link href="http://localhost:4000/documentation/welcome-to-millennial.html" rel="alternate" type="text/html" title="Welcome to Millennial!" /><published>2017-01-01T00:00:00-05:00</published><updated>2017-01-01T00:00:00-05:00</updated><id>http://localhost:4000/documentation/welcome-to-millennial</id><content type="html" xml:base="http://localhost:4000/documentation/welcome-to-millennial.html">&lt;p&gt;Millennial is a minimalist Jekyll theme. The purpose of this theme is to provide a simple, clean, content-focused blogging platform for your personal site or blog. Below you can find everything you need to get started.&lt;/p&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/documentation/getting-started.html&quot;&gt;Getting Started&lt;/a&gt;: getting started with installing Millennial, whether you are completely new to using Jekyll, or simply just migrating to a new Jekyll theme.&lt;/p&gt;

&lt;h2 id=&quot;example-content&quot;&gt;Example Content&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/sample/text-formatting.html&quot;&gt;Text and Formatting&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;questions&quot;&gt;Questions?&lt;/h2&gt;

&lt;p&gt;This theme is completely free and open source software. You may use it however you want, as it is distributed under the &lt;a href=&quot;http://choosealicense.com/licenses/mit/&quot;&gt;MIT License&lt;/a&gt;. If you are having any problems, any questions or suggestions, feel free to &lt;a href=&quot;https://twitter.com/intent/tweet?text=My%20question%20about%20Millennial;via=paululele&quot;&gt;tweet at me&lt;/a&gt;, or &lt;a href=&quot;https://github.com/lenpaul/Millennial/issues/new&quot;&gt;file a GitHub issue&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;more-jekyll&quot;&gt;More Jekyll!&lt;/h2&gt;

&lt;h3 id=&quot;lagrange&quot;&gt;Lagrange&lt;/h3&gt;

&lt;p&gt;Lagrange is a minimalist Jekyll blog theme that I built from scratch. The purpose of this theme is to provide a simple, clean, content-focused blogging platform for your personal site or blog.&lt;/p&gt;

&lt;p&gt;Feel free to check out &lt;a href=&quot;https://lenpaul.github.io/Lagrange/&quot; target=&quot;_blank&quot;&gt;the demo&lt;/a&gt;, where you’ll also find instructions on &lt;a href=&quot;https://lenpaul.github.io/Lagrange/journal/getting-started.html&quot;&gt;how to use install&lt;/a&gt; and use the theme.&lt;/p&gt;

&lt;h3 id=&quot;portfolio-jekyll-theme&quot;&gt;Portfolio Jekyll Theme&lt;/h3&gt;

&lt;p&gt;This is a Jekyll theme built using the &lt;a href=&quot;http://devtipsstarterkit.com/&quot;&gt;DevTips Starter Kit&lt;/a&gt; as a foundation for starting, and following closely the amazing tutorial by &lt;a href=&quot;https://www.youtube.com/watch?v=T6jKLsxbFg4&amp;amp;list=PL0CB3OvPhDA_STygmp3sDenx3UpdOMk7P&quot;&gt;Travis Neilson over at DevTips&lt;/a&gt;. The purpose of this theme is to provide a clean and simple website for your portfolio. Emphasis is placed on your projects, which are shown front and center on the home page.&lt;/p&gt;

&lt;p&gt;Everything that you will ever need to know about this Jekyll theme is included in &lt;a href=&quot;https://github.com/LeNPaul/portfolio-jekyll-theme&quot;&gt;the repository&lt;/a&gt;, which you can also find in &lt;a href=&quot;https://lenpaul.github.io/portfolio-jekyll-theme/&quot;&gt;the demo site&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;jekyll-starter-kit&quot;&gt;Jekyll Starter Kit&lt;/h3&gt;

&lt;p&gt;The Jekyll Starter Kit is a simple framework for starting your own Jekyll project using all of the best practices that I learned from building my other Jekyll themes.&lt;/p&gt;

&lt;p&gt;Feel free to check out &lt;a href=&quot;https://github.com/LeNPaul/jekyll-starter-kit&quot; target=&quot;_blank&quot;&gt;the GitHub repository&lt;/a&gt;, where you’ll also find instructions on how to use install and use the theme.&lt;/p&gt;</content><author><name>Paul Le</name></author><category term="documentation" /><category term="sample" /><summary type="html">Millennial is a minimalist Jekyll theme. The purpose of this theme is to provide a simple, clean, content-focused blogging platform for your personal site or blog. Below you can find everything you need to get started.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/cuba-1.jpg" /></entry><entry><title type="html">Getting Started</title><link href="http://localhost:4000/documentation/getting-started.html" rel="alternate" type="text/html" title="Getting Started" /><published>2016-10-10T00:00:00-04:00</published><updated>2016-10-10T00:00:00-04:00</updated><id>http://localhost:4000/documentation/getting-started</id><content type="html" xml:base="http://localhost:4000/documentation/getting-started.html">&lt;h1 id=&quot;millennial&quot;&gt;Millennial&lt;/h1&gt;

&lt;p&gt;Millennial is a minimalist Jekyll theme for running a simple, clean, content-focused publishing platform for your publication site or blog through &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt;, or on your own server. Everything that you will ever need to know about this Jekyll theme is included in the README below, which you can also find in &lt;a href=&quot;https://lenpaul.github.io/Millennial/&quot;&gt;the demo site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/8409329/32801138-33a72030-c94a-11e7-8a62-6184e6df5a8f.png&quot; alt=&quot;alt text&quot; title=&quot;Millennial Demo Image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;notable-features&quot;&gt;Notable features&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Compatible with GitHub Pages.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Support for Jekyll’s built-in Sass/SCSS preprocessor and data files for making customizing easier.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.google.com/analytics/&quot;&gt;Google Analytics&lt;/a&gt; support.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Commenting support powered by &lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Optimized for search engines.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;LaTeX support through &lt;a href=&quot;https://www.mathjax.org/&quot;&gt;MathJax&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;#what-is-jekyll&quot;&gt;What is Jekyll&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#never-used-jekyll-before&quot;&gt;Never Used Jeykll Before?&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;#github-pages-installation&quot;&gt;GitHub Pages Installation&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#local-installation&quot;&gt;Local Installation&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#directory-structure&quot;&gt;Directory Structure&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#starting-from-scratch&quot;&gt;Starting From Scratch&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#configuration&quot;&gt;Configuration&lt;/a&gt;
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;#sample-posts&quot;&gt;Sample Posts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#site-variables&quot;&gt;Site Variables&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#adding-menu-pages&quot;&gt;Adding Menu Pages&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#posts&quot;&gt;Posts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#layouts&quot;&gt;Layouts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#yaml-front-block-matter&quot;&gt;YAML Front Block Matter&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#features&quot;&gt;Features&lt;/a&gt;
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;#design-considerations&quot;&gt;Design Considerations&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#disqus&quot;&gt;Disqus&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#google-analytics&quot;&gt;Google Analytics&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#rss-feeds&quot;&gt;RSS Feeds&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#social-media-icons&quot;&gt;Social Media Icons&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#mathjax&quot;&gt;MathJax&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#syntax-highlighting&quot;&gt;Syntax Highlighting&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#markdown&quot;&gt;Markdown&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#everything-else&quot;&gt;Everything Else&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#questions&quot;&gt;Questions?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#credits&quot;&gt;Credits&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Millennial is a Jekyll theme that was built to be 100% compatible with &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;. If you are unfamiliar with GitHub Pages, you can check out &lt;a href=&quot;https://help.github.com/categories/github-pages-basics/&quot;&gt;their documentation&lt;/a&gt; for more information. &lt;a href=&quot;http://jmcglone.com/guides/github-pages/&quot;&gt;Jonathan McGlone’s guide&lt;/a&gt; on creating and hosting a personal site on GitHub is also a good resource.&lt;/p&gt;

&lt;h3 id=&quot;what-is-jekyll&quot;&gt;What is Jekyll?&lt;/h3&gt;

&lt;p&gt;Jekyll is a simple, blog-aware, static site generator for personal, project, or organization sites. Basically, Jekyll takes your page content along with template files and produces a complete website. For more information, visit the &lt;a href=&quot;https://jekyllrb.com/docs/home/&quot;&gt;official Jekyll site&lt;/a&gt; for their documentation. Codecademy also offers a great course on &lt;a href=&quot;https://www.codecademy.com/learn/deploy-a-website&quot;&gt;how to deploy a Jekyll site&lt;/a&gt; for complete beginners.&lt;/p&gt;

&lt;h3 id=&quot;never-used-jekyll-before&quot;&gt;Never Used Jekyll Before?&lt;/h3&gt;

&lt;p&gt;The beauty of hosting your website on GitHub is that you don’t have to actually have Jekyll installed on your computer. Everything can be done through the GitHub code editor, with minimal knowledge of how to use Jekyll or the command line. All you have to do is add your posts to the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory and edit the &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file to change the site settings. With some rudimentary knowledge of HTML and CSS, you can even modify the site to your liking. This can all be done through the GitHub code editor, which acts like a content management system (CMS).&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;h3 id=&quot;github-pages-installation&quot;&gt;GitHub Pages Installation&lt;/h3&gt;

&lt;p&gt;To start using Jekyll right away with GitHub Pages, &lt;a href=&quot;https://github.com/LeNPaul/Millennial/fork&quot;&gt;fork the Millennial repository on GitHub&lt;/a&gt;. From there, you can rename your repository to ‘USERNAME.github.io’, where ‘USERNAME’ is your GitHub username, and edit the &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.yml&lt;/code&gt; file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_data&lt;/code&gt; folder to your liking. Ensure that you have a branch named &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt;. Your website should be ready immediately at ‘http://USERNAME.github.io’. Note: if you are hosting several sites under the same GitHub username, then you will have to use &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;Project Pages instead of User Pages&lt;/a&gt; - just change the repository name to something other than ‘http://USERNAME.github.io’.&lt;/p&gt;

&lt;p&gt;Head over to the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory to view all the posts that are currently on the website, and to see examples of what post files generally look like. You can simply just duplicate the template post and start adding your own content.&lt;/p&gt;

&lt;h3 id=&quot;local-installation&quot;&gt;Local Installation&lt;/h3&gt;

&lt;p&gt;For a full local installation of Millennial, &lt;a href=&quot;https://github.com/LeNPaul/Millennial/archive/gh-pages.zip&quot;&gt;download your own copy of Millennial&lt;/a&gt; and unzip it into it’s own directory. From there, open up your favorite command line tool, enter &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;, and then enter &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;. Your site should be up and running locally at &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;directory-structure&quot;&gt;Directory Structure&lt;/h3&gt;

&lt;p&gt;If you are familiar with Jekyll, then the Millennial directory structure shouldn’t be too difficult to navigate. The following some highlights of the differences you might notice between the default directory structure. More information on what these folders and files do can be found in the &lt;a href=&quot;https://jekyllrb.com/docs/structure/&quot;&gt;Jekyll documentation site&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Millennial/
├── _data                      &lt;span class=&quot;c&quot;&gt;# Data files&lt;/span&gt;
|  └── settings.yml            &lt;span class=&quot;c&quot;&gt;# Theme settings and custom text&lt;/span&gt;
├── _includes                  &lt;span class=&quot;c&quot;&gt;# Theme includes&lt;/span&gt;
├── _layouts                   &lt;span class=&quot;c&quot;&gt;# Theme layouts (see below for details)&lt;/span&gt;
├── _posts                     &lt;span class=&quot;c&quot;&gt;# Where all your posts will go&lt;/span&gt;
├── assets                     &lt;span class=&quot;c&quot;&gt;# Style sheets and images are found here&lt;/span&gt;
|  ├── css                     &lt;span class=&quot;c&quot;&gt;# Style sheets go here&lt;/span&gt;
|  |  └── _sass                &lt;span class=&quot;c&quot;&gt;# Folder containing SCSS files&lt;/span&gt;
|  |  └── main.scss            &lt;span class=&quot;c&quot;&gt;# Main SCSS file&lt;/span&gt;
|  |  └── syntax.css           &lt;span class=&quot;c&quot;&gt;# Style sheet for code syntax highlighting&lt;/span&gt;
|  └── img                     &lt;span class=&quot;c&quot;&gt;# Images go here&lt;/span&gt;
├── pages                      &lt;span class=&quot;c&quot;&gt;# Category pages&lt;/span&gt;
├── _config.yml                &lt;span class=&quot;c&quot;&gt;# Site build settings&lt;/span&gt;
├── Gemfile                    &lt;span class=&quot;c&quot;&gt;# Ruby Gemfile for managing Jekyll plugins&lt;/span&gt;
├── index.md                   &lt;span class=&quot;c&quot;&gt;# Home page&lt;/span&gt;
├── LICENSE.md                 &lt;span class=&quot;c&quot;&gt;# License for this theme&lt;/span&gt;
├── README.md                  &lt;span class=&quot;c&quot;&gt;# Includes all of the documentation for this theme&lt;/span&gt;
└── rss-feed.xml               &lt;span class=&quot;c&quot;&gt;# Generates RSS 2.0 file which Jekyll points to&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;starting-from-scratch&quot;&gt;Starting From Scratch&lt;/h3&gt;

&lt;p&gt;To completely start from scratch, simply delete all the files in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;assets/img&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;pages&lt;/code&gt; folder, and add your own content. You may also replace the &lt;code class=&quot;highlighter-rouge&quot;&gt;README.md&lt;/code&gt; file with your own README. Everything in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_data&lt;/code&gt; folder and &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file can be edited to suit your needs. You may also change the &lt;code class=&quot;highlighter-rouge&quot;&gt;favicon.ico&lt;/code&gt; file to your own favicon.&lt;/p&gt;

&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;

&lt;h3 id=&quot;sample-posts&quot;&gt;Sample Posts&lt;/h3&gt;

&lt;p&gt;Visit the &lt;a href=&quot;https://lenpaul.github.io/Millennial/&quot;&gt;the demo site&lt;/a&gt; to find sample posts that show what different types of text formatting look like. You can find these posts in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; folder, which show what the best practices for setting up your own site are.&lt;/p&gt;

&lt;h3 id=&quot;site-variables&quot;&gt;Site Variables&lt;/h3&gt;

&lt;p&gt;To change site build settings, edit the &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file found in the root of your repository, which you can tweak however you like. More information on configuration settings and plugins can be found on &lt;a href=&quot;https://jekyllrb.com/docs/configuration/&quot;&gt;the Jekyll documentation site&lt;/a&gt;. This is also where you will be able to customize the title, description, and the author/owner of your site.&lt;/p&gt;

&lt;p&gt;If you are hosting your site on GitHub Pages, then committing a change to the &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file will force a rebuild of your site with Jekyll. Any changes made should be viewable soon after. If you are hosting your site locally, then you must run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt; again for the changes to take place.&lt;/p&gt;

&lt;p&gt;In the &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.yml&lt;/code&gt; file found in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_data&lt;/code&gt; folder, you will be able to customize your site settings, such as setting Disqus comments, Google Analytics, what shows up in your menu, and social media information.&lt;/p&gt;

&lt;h3 id=&quot;adding-menu-pages&quot;&gt;Adding Menu Pages&lt;/h3&gt;

&lt;p&gt;The menu pages are found in the &lt;code class=&quot;highlighter-rouge&quot;&gt;menu&lt;/code&gt; folder in the root directory, and can be added to your menu in the &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.yml&lt;/code&gt; file.&lt;/p&gt;

&lt;h3 id=&quot;posts&quot;&gt;Posts&lt;/h3&gt;

&lt;p&gt;You will find example posts in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit any post and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention of &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.md&lt;/code&gt; and includes the necessary front matter. Take a look at any sample post to get an idea about how it works. If you already have a website built with Jekyll, simply copy over your posts to migrate to Millennial.&lt;/p&gt;

&lt;h3 id=&quot;layouts&quot;&gt;Layouts&lt;/h3&gt;

&lt;p&gt;There are two main layout options that are included with Millennial: post and page. Layouts are specified through the &lt;a href=&quot;https://jekyllrb.com/docs/frontmatter/&quot;&gt;YAML front block matter&lt;/a&gt;. Any file that contains a YAML front block matter will be processed by Jekyll. For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: &quot;Example Post&quot;
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Examples of what posts looks like can be found in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory, which includes this post you are reading right now. Posts are the basic blog post layout, which includes a header image, post content, author name, date published, social media sharing links, and related posts.&lt;/p&gt;

&lt;p&gt;Pages are essentially the post layout without any of the extra features of the posts layout. An example of what pages look like can be found at the &lt;a href=&quot;https://lenpaul.github.io/Millennial/pages/documentation.html&quot;&gt;documentation page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In addition to the two main layout options above, there are also custom layouts that have been created for the &lt;a href=&quot;https://lenpaul.github.io/Millennial/&quot;&gt;home page&lt;/a&gt; and the &lt;a href=&quot;https://lenpaul.github.io/Millennial/pages/contact.html&quot;&gt;contacts page&lt;/a&gt;. These are simply just page layouts with some &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid template code&lt;/a&gt;. Check out the &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; file in the root directory for what the code looks like.&lt;/p&gt;

&lt;h3 id=&quot;yaml-front-block-matter&quot;&gt;YAML Front Block Matter&lt;/h3&gt;

&lt;p&gt;The recommended YAML front block is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout:
title:
author:
categories:
tags: []
image:
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;layout&lt;/code&gt; specifies which layout to use, &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; is the page or post title, &lt;code class=&quot;highlighter-rouge&quot;&gt;categories&lt;/code&gt; can be used to better organize your posts, &lt;code class=&quot;highlighter-rouge&quot;&gt;tags&lt;/code&gt; are used when generating related posts based on the topic of the post, and &lt;code class=&quot;highlighter-rouge&quot;&gt;image&lt;/code&gt; specifies which images to use. Have a look at some posts in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory to see how these variables are set.&lt;/p&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;

&lt;h3 id=&quot;design-considerations&quot;&gt;Design Considerations&lt;/h3&gt;

&lt;p&gt;Millennial was designed to be a minimalist theme in order for the focus to remain on your content. For example, links are signified mainly through an underline text-decoration, in order to maximize the perceived affordance of clickability (I originally just wanted to make the links a darker shade of grey).&lt;/p&gt;

&lt;h3 id=&quot;disqus&quot;&gt;Disqus&lt;/h3&gt;

&lt;p&gt;Millennial supports comments at the end of posts through &lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt;. In order to activate Disqus commenting, set &lt;code class=&quot;highlighter-rouge&quot;&gt;disqus.comments&lt;/code&gt; to true in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_data/settings.yml&lt;/code&gt; file. If you do not have a Disqus account already, you will have to set one up, and create a profile for your website. You will be given a &lt;code class=&quot;highlighter-rouge&quot;&gt;disqus_shortname&lt;/code&gt; that will be used to generate the appropriate comments sections for your site. More information on &lt;a href=&quot;http://www.perfectlyrandom.org/2014/06/29/adding-disqus-to-your-jekyll-powered-github-pages/&quot;&gt;how to set up Disqus&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;google-analytics&quot;&gt;Google Analytics&lt;/h3&gt;

&lt;p&gt;It is possible to track your site statistics through &lt;a href=&quot;https://www.google.com/analytics/&quot;&gt;Google Analytics&lt;/a&gt;. Similar to Disqus, you will have to create an account for Google Analytics, and enter the correct Google ID for your site under &lt;code class=&quot;highlighter-rouge&quot;&gt;google-ID&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.yml&lt;/code&gt; file. More information on &lt;a href=&quot;https://michaelsoolee.com/google-analytics-jekyll/&quot;&gt;how to set up Google Analytics&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;rss-feeds&quot;&gt;RSS Feeds&lt;/h3&gt;

&lt;p&gt;Atom is supported by default through &lt;a href=&quot;https://github.com/jekyll/jekyll-feed&quot;&gt;jekyll-feed&lt;/a&gt;. With jekyll-feed, you can set configuration variables such as ‘title’, ‘description’, and ‘author’, in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;RSS 2.0 is also supported through &lt;a href=&quot;http://www.rssboard.org/rss-autodiscovery&quot;&gt;RSS auto-discovery&lt;/a&gt;. The &lt;code class=&quot;highlighter-rouge&quot;&gt;rss-feed.xml&lt;/code&gt; file (based on the template found at &lt;a href=&quot;https://github.com/snaptortoise/jekyll-rss-feeds&quot;&gt;jekyll-rss-feeds&lt;/a&gt;) that the feed path points to when using RSS 2.0 is automatically generated based on the appropriate configuration variables found in &lt;code class=&quot;highlighter-rouge&quot;&gt;_data/settings.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To use RSS 2.0, ensure the following is done:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Uncomment the last two lines in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;_data/settings.yml&lt;/code&gt;, under ‘social’, comment out the rss-square that points to &lt;code class=&quot;highlighter-rouge&quot;&gt;feed.xml&lt;/code&gt;, and uncomment the rss-square that points to &lt;code class=&quot;highlighter-rouge&quot;&gt;rss-feed.xml&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/head.html&lt;/code&gt;, comment out &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;link type=&quot;application/atom+xml&quot; rel=&quot;alternate&quot; href=&quot;http://localhost:4000/feed.xml&quot; title=&quot;Durga K.&quot; /&amp;gt;&lt;/code&gt; and uncomment the line under the RSS 2.0 comment.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;social-media-icons&quot;&gt;Social Media Icons&lt;/h3&gt;

&lt;p&gt;All social media icons are courtesy of &lt;a href=&quot;http://fontawesome.io/&quot;&gt;Font Awesome&lt;/a&gt;. You can change which icons appear, as well as the account that they link to, in the &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.yml&lt;/code&gt; file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_data&lt;/code&gt; folder.&lt;/p&gt;

&lt;h3 id=&quot;mathjax&quot;&gt;MathJax&lt;/h3&gt;

&lt;p&gt;Millennial comes out of the box with &lt;a href=&quot;https://www.mathjax.org/&quot;&gt;MathJax&lt;/a&gt;, which allows you to display mathematical equations in your posts through the use of &lt;a href=&quot;http://www.andy-roberts.net/writing/latex/mathematics_1&quot;&gt;LaTeX&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;syntax-highlighting&quot;&gt;Syntax Highlighting&lt;/h3&gt;

&lt;p&gt;Millennial provides syntax highlighting through &lt;a href=&quot;https://help.github.com/articles/creating-and-highlighting-code-blocks/&quot;&gt;fenced code blocks&lt;/a&gt;. Syntax highlighting allows you to display source code in different colors and fonts depending on what programming language is being displayed. You can find the full list of supported programming languages &lt;a href=&quot;https://github.com/jneen/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;here&lt;/a&gt;. Another option is to embed your code through &lt;a href=&quot;https://en.support.wordpress.com/gist/&quot;&gt;Gist&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;markdown&quot;&gt;Markdown&lt;/h3&gt;

&lt;p&gt;As always, Jekyll offers support for GitHub Flavored Markdown, which allows you to format your posts using the &lt;a href=&quot;https://guides.github.com/features/mastering-markdown/&quot;&gt;Markdown syntax&lt;/a&gt;. Examples of these text formatting features can be seen below. You can find this post in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory as well as the &lt;code class=&quot;highlighter-rouge&quot;&gt;README.md&lt;/code&gt; file.&lt;/p&gt;

&lt;h2 id=&quot;everything-else&quot;&gt;Everything Else&lt;/h2&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;contributing&quot;&gt;Contributing&lt;/h2&gt;

&lt;p&gt;If you would like to make a feature request, or report a bug or typo in the documentation, then please &lt;a href=&quot;https://github.com/LeNPaul/Millennial/issues/new&quot;&gt;submit a GitHub issue&lt;/a&gt;. If you would like to make a contribution, then feel free to &lt;a href=&quot;https://help.github.com/articles/about-pull-requests/&quot;&gt;submit a pull request&lt;/a&gt; - as a bonus, I will credit all contributors below! If this is your first pull request, it may be helpful to read up on the &lt;a href=&quot;https://guides.github.com/introduction/flow/&quot;&gt;GitHub Flow&lt;/a&gt; first.&lt;/p&gt;

&lt;p&gt;Millennial has been designed as a base for users to customize and fit to their own unique needs. Please keep this in mind when requesting features and/or submitting pull requests. Some examples of changes that I would love to see are things that would make the site easier to use, or better ways of doing things. Please avoid changes that do not benefit the majority of users.&lt;/p&gt;

&lt;h2 id=&quot;questions&quot;&gt;Questions?&lt;/h2&gt;

&lt;p&gt;This theme is completely free and open source software. You may use it however you want, as it is distributed under the &lt;a href=&quot;http://choosealicense.com/licenses/mit/&quot;&gt;MIT License&lt;/a&gt;. If you are having any problems, any questions or suggestions, feel free to &lt;a href=&quot;https://twitter.com/intent/tweet?text=My%question%about%Millennial%is:%&amp;amp;via=paululele&quot;&gt;tweet at me&lt;/a&gt;, or &lt;a href=&quot;https://github.com/lenpaul/Millennial/issues/new&quot;&gt;file a GitHub issue&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;credits&quot;&gt;Credits&lt;/h2&gt;

&lt;h3 id=&quot;creator&quot;&gt;Creator&lt;/h3&gt;

&lt;h4 id=&quot;paul-le&quot;&gt;Paul Le&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://lenpaul.com&quot;&gt;www.lenpaul.com&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/paululele&quot;&gt;Twitter&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/LeNPaul&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;contributors&quot;&gt;Contributors&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/b-morawiec&quot;&gt;b-morawiec&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/JainVikas&quot;&gt;JainVikas&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/mschaeffner&quot;&gt;mschaeffner&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/cfe316&quot;&gt;cfe316&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/JeremyGonzales&quot;&gt;JeremyGonzales&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;icons--demo-images&quot;&gt;Icons + Demo Images&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://deathtothestockphoto.com/&quot;&gt;Death to Stock&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://fontawesome.io/&quot;&gt;Font Awesome&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;other&quot;&gt;Other&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.freecodecamp.org&quot;&gt;Free Code Camp&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.khanacademy.org/&quot;&gt;Khan Academy&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;p&gt;Open sourced under the &lt;a href=&quot;https://github.com/LeNPaul/Millennial/blob/gh-pages/LICENSE.md&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</content><author><name>Paul Le</name></author><category term="documentation" /><category term="sample" /><summary type="html">Millennial</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/city-2.jpg" /></entry><entry><title type="html">Text Formatting</title><link href="http://localhost:4000/sample/text-formatting.html" rel="alternate" type="text/html" title="Text Formatting" /><published>2016-09-09T00:00:00-04:00</published><updated>2016-09-09T00:00:00-04:00</updated><id>http://localhost:4000/sample/text-formatting</id><content type="html" xml:base="http://localhost:4000/sample/text-formatting.html">&lt;h1 id=&quot;markdown-support&quot;&gt;Markdown Support&lt;/h1&gt;

&lt;p&gt;As always, Jekyll offers support for GitHub Flavored Markdown, which allows you to format your posts using the &lt;a href=&quot;https://guides.github.com/features/mastering-markdown/&quot;&gt;Markdown syntax&lt;/a&gt;. Examples of these text formatting features can be seen below. You can find this post in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory.&lt;/p&gt;

&lt;h2 id=&quot;basic-formatting&quot;&gt;Basic Formatting&lt;/h2&gt;

&lt;p&gt;With Markdown, it is possible to emphasize words by making them &lt;em&gt;italicized&lt;/em&gt;, using &lt;em&gt;astericks&lt;/em&gt; or &lt;em&gt;underscores&lt;/em&gt;, or making them &lt;strong&gt;bold&lt;/strong&gt;, using &lt;strong&gt;double astericks&lt;/strong&gt; or &lt;strong&gt;double underscores&lt;/strong&gt;. Of course, you can combine those two formats, with both &lt;em&gt;&lt;strong&gt;bold and italicized&lt;/strong&gt;&lt;/em&gt; text, using any combination of the above syntax. You can also add a strikethrough to text using a &lt;del&gt;double tilde&lt;/del&gt;.&lt;/p&gt;

&lt;h2 id=&quot;paragraphs&quot;&gt;Paragraphs&lt;/h2&gt;

&lt;p&gt;This is what a paragraph looks like. For the purpose of demonstration, the rest of this paragraph and the next paragraph after will mean absolutely nothing. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.&lt;/p&gt;

&lt;p&gt;Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.&lt;/p&gt;

&lt;h2 id=&quot;headings&quot;&gt;Headings&lt;/h2&gt;

&lt;p&gt;Sometimes it is useful to have different levels of headings to structure your documents. Start lines with &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt; to create headings. Multiple &lt;code class=&quot;highlighter-rouge&quot;&gt;##&lt;/code&gt; in a row denote smaller heading size. The following demonstrate the full range of heading sizes:&lt;/p&gt;

&lt;h1 id=&quot;heading-one-h1&quot;&gt;Heading One (h1)&lt;/h1&gt;

&lt;h2 id=&quot;heading-two-h2&quot;&gt;Heading Two (h2)&lt;/h2&gt;

&lt;h3 id=&quot;heading-three-h3&quot;&gt;Heading Three (h3)&lt;/h3&gt;

&lt;h4 id=&quot;heading-four-h4&quot;&gt;Heading Four (h4)&lt;/h4&gt;

&lt;h5 id=&quot;heading-five-h5&quot;&gt;Heading Five (h5)&lt;/h5&gt;

&lt;h6 id=&quot;heading-six-h6&quot;&gt;Heading Six (h6)&lt;/h6&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;

&lt;p&gt;You can create an inline link by wrapping link text in square brackets &lt;code class=&quot;highlighter-rouge&quot;&gt;[ ]&lt;/code&gt;, and then wrapping the URL in parentheses &lt;code class=&quot;highlighter-rouge&quot;&gt;( )&lt;/code&gt;. For example, it is very easy to &lt;a href=&quot;http://google.com&quot;&gt;link to Google!&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;blockquotes&quot;&gt;Blockquotes&lt;/h2&gt;

&lt;p&gt;Blockquotes are useful for denoting quotes, or highlighting a large block of text. Single line blockquote:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This quote will change your life.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Multi line blockquote with a cite reference:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;People think focus means saying yes to the thing you’ve got to focus on. But that’s not what it means at all. It means saying no to the hundred other good ideas that there are. You have to pick carefully. I’m actually as proud of the things we haven’t done as the things I have done. Innovation is saying no to 1,000 things.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;code-and-syntax-highlighting&quot;&gt;Code and Syntax Highlighting&lt;/h2&gt;

&lt;p&gt;Code blocks are part of the Markdown spec, but syntax highlighting isn’t. However, many renderers - like GitHub or most Jekyll themes - support syntax highlighting. Which languages are supported and how those language names should be written will vary from renderer to renderer. You can find the full list of supported programming languages &lt;a href=&quot;https://github.com/jneen/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;here&lt;/a&gt;. Also, it is possible to do &lt;code class=&quot;highlighter-rouge&quot;&gt;inline code blocks&lt;/code&gt;, by wrapping the text in ` ` ` quotations.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;No language indicated, so no syntax highlighting.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;return a + b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Another option is to embed your code through &lt;a href=&quot;https://en.support.wordpress.com/gist/&quot;&gt;Gist&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;unordered-and-numbered-lists&quot;&gt;Unordered and Numbered Lists&lt;/h2&gt;

&lt;p&gt;You can make an unordered and nested list by preceding one or more lines of text with &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;, or &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;, and indenting sublists. The following lists show the full range of possible list formats.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;List item one
    &lt;ul&gt;
      &lt;li&gt;List item one
        &lt;ul&gt;
          &lt;li&gt;List item one&lt;/li&gt;
          &lt;li&gt;List item two&lt;/li&gt;
          &lt;li&gt;List item three&lt;/li&gt;
          &lt;li&gt;List item four&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;List item two&lt;/li&gt;
      &lt;li&gt;List item three&lt;/li&gt;
      &lt;li&gt;List item four&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;List item two&lt;/li&gt;
  &lt;li&gt;List item three&lt;/li&gt;
  &lt;li&gt;List item four&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Numbered lists are made by using numbers instead of bullet points.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;List item one
    &lt;ol&gt;
      &lt;li&gt;List item one
        &lt;ol&gt;
          &lt;li&gt;List item one&lt;/li&gt;
          &lt;li&gt;List item two&lt;/li&gt;
          &lt;li&gt;List item three&lt;/li&gt;
          &lt;li&gt;List item four&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;List item two&lt;/li&gt;
      &lt;li&gt;List item three&lt;/li&gt;
      &lt;li&gt;List item four&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;List item two&lt;/li&gt;
  &lt;li&gt;List item three&lt;/li&gt;
  &lt;li&gt;List item four&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;mathjax-example&quot;&gt;MathJax Example&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Schr%C3%B6dinger_equation&quot;&gt;Schrödinger equation&lt;/a&gt; is a partial differential equation that describes how the quantum state of a quantum system changes with time:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;i\hbar\frac{\partial}{\partial t} \Psi(\mathbf{r},t) = \left [ \frac{-\hbar^2}{2\mu}\nabla^2 + V(\mathbf{r},t)\right ] \Psi(\mathbf{r},t)&lt;/script&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Joseph-Louis_Lagrange&quot;&gt;Joseph-Louis Lagrange&lt;/a&gt; was an Italian mathematician and astronomer who was responsible for the formulation of Lagrangian mechanics, which is a reformulation of Newtonian mechanics.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{\mathrm{d}}{\mathrm{d}t} \left ( \frac {\partial  L}{\partial \dot{q}_j} \right ) =  \frac {\partial L}{\partial q_j}&lt;/script&gt;

&lt;h2 id=&quot;tables&quot;&gt;Tables&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Title 1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Title 2&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Title 3&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Title 4&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;lorem&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;lorem ipsum&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;lorem ipsum dolor&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;lorem ipsum dolor sit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lorem ipsum dolor sit&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;lorem ipsum dolor sit&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;lorem ipsum dolor sit&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;lorem ipsum dolor sit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lorem ipsum dolor sit&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;lorem ipsum dolor sit&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;lorem ipsum dolor sit&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;lorem ipsum dolor sit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lorem ipsum dolor sit&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;lorem ipsum dolor sit&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;lorem ipsum dolor sit&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;lorem ipsum dolor sit&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;embedding&quot;&gt;Embedding&lt;/h2&gt;

&lt;p&gt;Plenty of social media sites offer the option of embedding certain parts of their site on your own site, such as YouTube and Twitter:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/mthtn1X4eUY&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a class=&quot;twitter-grid&quot; data-partner=&quot;tweetdeck&quot; href=&quot;https://twitter.com/paululele/timelines/755079130027352064&quot;&gt;New Collection&lt;/a&gt; &lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, which you can mix with Markdown if you like. A complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;useful-resources&quot;&gt;Useful Resources&lt;/h2&gt;

&lt;p&gt;More information on Markdown can be found at the following links:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Here-Cheatsheet#code&quot;&gt;Markdown Here Cheatsheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.unexpected-vortices.com/sw/rippledoc/quick-markdown-example.html&quot;&gt;Quick Markdown Example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://daringfireball.net/projects/markdown/basics&quot;&gt;Markdown Basics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.github.com/gfm/&quot;&gt;GitHub Flavoured Markdown Spec&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/basic-writing-and-formatting-syntax/#lists&quot;&gt;Basic writing and formatting syntax&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Paul Le</name></author><category term="sample" /><summary type="html">Markdown Support</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/arctic-1.jpg" /></entry><entry><title type="html">Learning Resources</title><link href="http://localhost:4000/resources/learning-resources.html" rel="alternate" type="text/html" title="Learning Resources" /><published>2016-05-05T00:00:00-04:00</published><updated>2016-05-05T00:00:00-04:00</updated><id>http://localhost:4000/resources/learning-resources</id><content type="html" xml:base="http://localhost:4000/resources/learning-resources.html">&lt;p&gt;The beauty of computer programming is that you do not need to formally go to school to learn how to program. You can learn almost everything that you would need to know online, and for free. The following resources are some that I have used personally, that I highly recommend, for anyone looking to learn more about computer programming.&lt;/p&gt;

&lt;h2 id=&quot;free-code-camp&quot;&gt;&lt;a href=&quot;https://www.freecodecamp.org/&quot;&gt;Free Code Camp&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;My personal favourite for learning full stack web development. They offer a great front and back end curriculum that requires you to complete a variety of projects in order to apply the knowledge that you learn during the lessons. As a bonus, at the end of the curriculum you will have a few impressive projects under your belt for your portfolio.&lt;/p&gt;

&lt;h2 id=&quot;codecademy&quot;&gt;&lt;a href=&quot;https://www.codecademy.com/&quot;&gt;Codecademy&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Not only does Codecademy have many great courses on various web development languages such as &lt;a href=&quot;https://www.codecademy.com/learn/learn-html&quot;&gt;HTML&lt;/a&gt;, &lt;a href=&quot;https://www.codecademy.com/learn/learn-css&quot;&gt;CSS&lt;/a&gt;, and &lt;a href=&quot;https://www.codecademy.com/learn/introduction-to-javascript&quot;&gt;JavaScript&lt;/a&gt;, but they even offer a course on &lt;a href=&quot;https://www.codecademy.com/learn/deploy-a-website&quot;&gt;how to deploy a Jekyll site&lt;/a&gt;. If you are completely new to Jekyll, I would recommend working through that course as a great start for learning how to deploy your Jekyll site.&lt;/p&gt;

&lt;h2 id=&quot;khan-academy&quot;&gt;&lt;a href=&quot;https://www.khanacademy.org/&quot;&gt;Khan Academy&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;A great resource not only for learning mathematics (what most people probably know Khan Academy for), but also &lt;a href=&quot;https://www.khanacademy.org/computing/computer-programming&quot;&gt;computer programming&lt;/a&gt;. What Khan Academy offers that is different from the other two above resources is that it offers courses in &lt;a href=&quot;https://www.khanacademy.org/computing/computer-science&quot;&gt;computer science related&lt;/a&gt; topics, such as &lt;a href=&quot;https://www.khanacademy.org/computing/computer-science/algorithms&quot;&gt;algorithms&lt;/a&gt; and &lt;a href=&quot;https://www.khanacademy.org/computing/computer-science/cryptography&quot;&gt;cryptography&lt;/a&gt;. This is unique in that most online resources mostly focus on the programming side of things.&lt;/p&gt;</content><author><name>Paul Le</name></author><category term="documentation" /><category term="sample" /><summary type="html">The beauty of computer programming is that you do not need to formally go to school to learn how to program. You can learn almost everything that you would need to know online, and for free. The following resources are some that I have used personally, that I highly recommend, for anyone looking to learn more about computer programming.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/arctic-4.jpg" /></entry><entry><title type="html">About the Author</title><link href="http://localhost:4000/facts/about-the-author.html" rel="alternate" type="text/html" title="About the Author" /><published>2016-04-04T00:00:00-04:00</published><updated>2016-04-04T00:00:00-04:00</updated><id>http://localhost:4000/facts/about-the-author</id><content type="html" xml:base="http://localhost:4000/facts/about-the-author.html">&lt;p&gt;Hi there! I’m Paul. I’m a physics major turned programmer. Ever since I first learned how to program while taking a scientific computing for physics course, I have pursued programming as a passion, and as a career. Check out &lt;a href=&quot;https://www.lenpaul.com/&quot;&gt;my personal website&lt;/a&gt; for more information on my other projects (including more Jekyll themes!), as well as some of my writing.&lt;/p&gt;</content><author><name>Paul Le</name></author><category term="sample" /><summary type="html">Hi there! I’m Paul. I’m a physics major turned programmer. Ever since I first learned how to program while taking a scientific computing for physics course, I have pursued programming as a passion, and as a career. Check out my personal website for more information on my other projects (including more Jekyll themes!), as well as some of my writing.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/cuba-4.jpg" /></entry></feed>